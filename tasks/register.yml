---
- name: Waiting for other Graylog node ready
  uri:
    url: 'http://{{ ansible_default_ipv4.address }}:{{ graylog_port_arg.api }}/api/system/lbstatus'
    method: 'GET'
    return_content: 'yes'
    status_code: '200'
    headers:
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
  environment:
    no_proxy: '{{ ansible_default_ipv4.address }}'
  register: graylog_node_status
  until: graylog_node_status.content.find("ALIVE") != -1
  retries: 12
  delay: 10
  when: graylog_servers[0] not in ansible_default_ipv4.address

- name: Get Graylog prometheus exporter user token
  uri:
    url: 'http://{{ ansible_default_ipv4.address }}:{{ graylog_port_arg.api }}/api/users/prometheus/tokens'
    method: 'GET'
    user: '{{ graylog_root_username }}'
    password: '{{ graylog_root_password }}'
    force_basic_auth: 'yes'
    status_code: '200'
    headers:
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
  environment:
    no_proxy: '{{ ansible_default_ipv4.address }}'
  register: graylog_exporter_user_token
  no_log: true

- name: Register exporter service with an http health check
  uri:
    url: 'http://{{ item }}:{{ consul_public_http_port }}/v1/agent/service/register'
    method: 'PUT'
    body: '{"tags":["prometheus","exporter"],"ID":"{{ inventory_hostname | upper }}_graylog_exporter","name":"graylog_exporter","address":"{{ ansible_default_ipv4.address }}","port":{{ graylog_port_arg.api }},"meta":{"instance":"{{ inventory_hostname | upper }}","group":"{{ group_names[0] | upper }}","environment":"{{ environments | upper }}","cluster":"{{ graylog_cluster | upper }}"},"checks":[{"http":"http://{{ (graylog_exporter_user_token | json_query("json.tokens[*].token"))[0] }}:token@{{ ansible_default_ipv4.address }}:{{ graylog_port_arg.api }}/api/plugins/org.graylog.plugins.metrics.prometheus/metrics","interval":"60s","tls_skip_verify":true,"method":"HEAD","timeout":"5s"}]}'
    body_format: 'json'
    status_code: '200'
    headers:
      X-Consul-Token: '{{ consul_public_exporter_token }}'
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
  environment:
    no_proxy: '{{ item }}'
  loop: '{{ consul_public_clients|flatten(levels=1) }}'
  register: register_status
  until: register_status.status == 200
  retries: 3
  delay: 3
  no_log: true
  changed_when: false
  failed_when: false
