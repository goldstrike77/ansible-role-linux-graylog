---
graylog_servers: "\
  {% set _graylog_servers = [] %}\
  {% for host in groups[group_names[-1]] %}\
    {% set _graylog_cluster = hostvars[host]['graylog_cluster'] | default('', true) %}\
    {% if ( _graylog_cluster == hostvars[host]['graylog_cluster']) %}\
      {% if _graylog_servers.append(hostvars[host]['ansible_host']) %}{% endif %}\
    {% endif %}\
  {% endfor %}\
  {{ _graylog_servers }}"

graylog_conf_parameter:
  - { regexp: '^is_master ', line: 'is_master = {% if graylog_servers[0] in ansible_default_ipv4.address %}true{% else %}false{% endif %}' }
  - { regexp: '^password_secret ', line: 'password_secret = {{ graylog_arg.password_secret }}' }
  - { regexp: '^root_username ', line: 'root_username = {{ graylog_arg.root_username }}' }
  - { regexp: '^root_password_sha2 ', line: 'root_password_sha2 = {{ graylog_arg.root_password_sha2 | password_hash("sha256") }}' }
  - { regexp: '^root_email ', line: 'root_email = "{{ graylog_arg.root_email }}"' }
  - { regexp: '^root_timezone ', line: 'root_timezone = {{ graylog_arg.root_timezone }}' }
  - { regexp: '^data_dir ', line: 'data_dir = {{ graylog_path }}/graylog' }
  - { regexp: '^http_bind_address ', line: 'http_bind_address = {{ ansible_default_ipv4.address }}:{{ graylog_port_arg.api }}' }
  - { regexp: '^http_publish_uri ', line: 'http_publish_uri = http://{{ ansible_default_ipv4.address }}:{{ graylog_port_arg.api }}/' }
  - { regexp: '^http_enable_cors ', line: 'http_enable_cors = {{ graylog_arg.http_enable_cors | bool | to_json }}' }
  - { regexp: '^http_enable_gzip ', line: 'http_enable_gzip = {{ graylog_arg.http_enable_gzip | bool | to_json }}' }
  - { regexp: '^http_max_header_size ', line: 'http_max_header_size = {{ graylog_arg.http_max_header_size }}' }
  - { regexp: '^http_thread_pool_size ', line: 'http_thread_pool_size = {{ (ansible_processor_vcpus * 6) | int }}' }
  - { regexp: '^http_enable_tls ', line: 'http_enable_tls = {{ graylog_arg.http_enable_tls | bool | to_json }}' }
  - { regexp: '^http_tls_cert_file ', line: 'http_tls_cert_file = /etc/graylog/server/ssl/certificate.pem' }
  - { regexp: '^http_tls_key_file ', line: 'http_tls_key_file = /etc/graylog/server/ssl/server.key' }
  - { regexp: '^elasticsearch_connect_timeout ', line: 'elasticsearch_connect_timeout = {{ graylog_es_arg.connect_timeout }}' }
  - { regexp: '^elasticsearch_socket_timeout ', line: 'elasticsearch_socket_timeout = {{ graylog_es_arg.socket_timeout }}' }
  - { regexp: '^elasticsearch_idle_timeout ', line: 'elasticsearch_idle_timeout = {{ graylog_es_arg.idle_timeout }}' }
  - { regexp: '^elasticsearch_max_total_connections ', line: 'elasticsearch_max_total_connections = {{ graylog_es_arg.max_total_connections }}' }
  - { regexp: '^elasticsearch_max_total_connections_per_route ', line: 'elasticsearch_max_total_connections_per_route = {{ graylog_es_arg.max_total_connections_per_route }}' }
  - { regexp: '^elasticsearch_max_retries ', line: 'elasticsearch_max_retries = {{ graylog_es_arg.max_retries }}' }
  - { regexp: '^elasticsearch_discovery_enabled ', line: 'elasticsearch_discovery_enabled = {{ graylog_es_arg.discovery_enabled | bool | to_json }}' }
  - { regexp: '^elasticsearch_discovery_filter ', line: 'elasticsearch_discovery_filter = {{ graylog_es_arg.discovery_filter }}' }
  - { regexp: '^elasticsearch_discovery_frequency ', line: 'elasticsearch_discovery_frequency = {{ graylog_es_arg.discovery_frequency }}' }
  - { regexp: '^elasticsearch_compression_enabled ', line: 'elasticsearch_compression_enabled = {{ graylog_es_arg.compression_enabled | bool | to_json }}' }
  - { regexp: '^elasticsearch_disable_version_check ', line: 'elasticsearch_disable_version_check = {{ graylog_es_arg.disable_version_check | bool | to_json }}' }
  - { regexp: '^allow_leading_wildcard_searches ', line: 'allow_leading_wildcard_searches = {{ graylog_arg.allow_leading_wildcard_searches | bool | to_json }}' }
  - { regexp: '^elasticsearch_hosts ', line: 'elasticsearch_hosts = http://{{ graylog_es_hosts | list | join(":" + graylog_es_port + ",http://") }}:{{ graylog_es_port }}' }
  - { regexp: '^allow_highlighting ', line: 'allow_highlighting = {{ graylog_arg.allow_highlighting | bool | to_json }}' }

  - { regexp: '^elasticsearch_request_timeout ', line: 'elasticsearch_request_timeout = {{ graylog_es_arg.request_timeout }}' }
  - { regexp: '^elasticsearch_index_optimization_timeout ', line: 'elasticsearch_index_optimization_timeout = {{ graylog_es_arg.index_optimization_timeout }}' }
  - { regexp: '^elasticsearch_index_optimization_jobs ', line: 'elasticsearch_index_optimization_jobs = {{ graylog_es_arg.index_optimization_jobs }}' }
