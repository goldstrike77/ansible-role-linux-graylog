---
graylog_servers: "\
  {% set _graylog_servers = [] %}\
  {% for host in groups[group_names[-1]] %}\
    {% set _graylog_cluster = hostvars[host]['graylog_cluster'] | default('', true) %}\
    {% if ( _graylog_cluster == hostvars[host]['graylog_cluster']) %}\
      {% if _graylog_servers.append(hostvars[host]['ansible_host']) %}{% endif %}\
    {% endif %}\
  {% endfor %}\
  {{ _graylog_servers }}"

graylog_conf_parameter:
  - { regexp: '^is_master ', line: 'is_master = {% if graylog_servers[0] in ansible_default_ipv4.address %}true{% else %}false{% endif %}' }
  - { regexp: '^password_secret ', line: 'password_secret = {{ graylog_arg.password_secret }}' }
  - { regexp: '^root_username ', line: 'root_username = {{ graylog_root_username }}' }
  - { regexp: '^root_password_sha2 ', line: 'root_password_sha2 = {{ graylog_root_password_sha2.stdout }}' }
  - { regexp: '^root_email ', line: 'root_email = "{{ graylog_root_email }}"' }
  - { regexp: '^root_timezone ', line: 'root_timezone = {{ graylog_root_timezone }}' }
  - { regexp: '^data_dir ', line: 'data_dir = {{ graylog_path }}/graylog' }
  - { regexp: '^http_bind_address ', line: 'http_bind_address = {{ ansible_default_ipv4.address }}:{{ graylog_port_arg.api }}' }
  - { regexp: '^http_publish_uri ', line: 'http_publish_uri = http://{{ ansible_default_ipv4.address }}:{{ graylog_port_arg.api }}/' }
  - { regexp: '^versionchecks ', line: 'versionchecks = {{ graylog_arg.versionchecks | bool | to_json }}' }
  - { regexp: '^http_enable_cors ', line: 'http_enable_cors = {{ graylog_arg.http_enable_cors | bool | to_json }}' }
  - { regexp: '^http_enable_gzip ', line: 'http_enable_gzip = {{ graylog_arg.http_enable_gzip | bool | to_json }}' }
  - { regexp: '^http_max_header_size ', line: 'http_max_header_size = {{ graylog_arg.http_max_header_size }}' }
  - { regexp: '^http_thread_pool_size ', line: 'http_thread_pool_size = {{ graylog_arg.http_thread_pool_size }}' }
  - { regexp: '^http_enable_tls ', line: 'http_enable_tls = {{ graylog_arg.http_enable_tls | bool | to_json }}' }
  - { regexp: '^http_tls_cert_file ', line: 'http_tls_cert_file = /etc/graylog/server/ssl/certificate.pem' }
  - { regexp: '^http_tls_key_file ', line: 'http_tls_key_file = /etc/graylog/server/ssl/server.key' }
  - { regexp: '^elasticsearch_connect_timeout ', line: 'elasticsearch_connect_timeout = {{ graylog_es_arg.connect_timeout }}' }
  - { regexp: '^elasticsearch_socket_timeout ', line: 'elasticsearch_socket_timeout = {{ graylog_es_arg.socket_timeout }}' }
  - { regexp: '^elasticsearch_idle_timeout ', line: 'elasticsearch_idle_timeout = {{ graylog_es_arg.idle_timeout }}' }
  - { regexp: '^elasticsearch_max_total_connections ', line: 'elasticsearch_max_total_connections = {{ graylog_es_arg.max_total_connections }}' }
  - { regexp: '^elasticsearch_max_total_connections_per_route ', line: 'elasticsearch_max_total_connections_per_route = {{ graylog_es_arg.max_total_connections_per_route }}' }
  - { regexp: '^elasticsearch_max_retries ', line: 'elasticsearch_max_retries = {{ graylog_es_arg.max_retries }}' }
  - { regexp: '^elasticsearch_discovery_enabled ', line: 'elasticsearch_discovery_enabled = {{ graylog_es_arg.discovery_enabled | bool | to_json }}' }
  - { regexp: '^elasticsearch_discovery_filter ', line: 'elasticsearch_discovery_filter = {{ graylog_es_arg.discovery_filter }}' }
  - { regexp: '^elasticsearch_discovery_frequency ', line: 'elasticsearch_discovery_frequency = {{ graylog_es_arg.discovery_frequency }}' }
  - { regexp: '^elasticsearch_compression_enabled ', line: 'elasticsearch_compression_enabled = {{ graylog_es_arg.compression_enabled | bool | to_json }}' }
  - { regexp: '^elasticsearch_disable_version_check ', line: 'elasticsearch_disable_version_check = {{ graylog_es_arg.disable_version_check | bool | to_json }}' }
  - { regexp: '^allow_leading_wildcard_searches ', line: 'allow_leading_wildcard_searches = {{ graylog_arg.allow_leading_wildcard_searches | bool | to_json }}' }
  - { regexp: '^elasticsearch_hosts ', line: 'elasticsearch_hosts = http://{{ graylog_es_hosts | list | join(":" + graylog_es_port + ",http://") }}:{{ graylog_es_port }}' }
  - { regexp: '^allow_highlighting ', line: 'allow_highlighting = {{ graylog_arg.allow_highlighting | bool | to_json }}' }
  - { regexp: '^elasticsearch_request_timeout ', line: 'elasticsearch_request_timeout = {{ graylog_es_arg.request_timeout }}' }
  - { regexp: '^elasticsearch_index_optimization_timeout ', line: 'elasticsearch_index_optimization_timeout = {{ graylog_es_arg.index_optimization_timeout }}' }
  - { regexp: '^elasticsearch_index_optimization_jobs ', line: 'elasticsearch_index_optimization_jobs = {{ graylog_es_arg.index_optimization_jobs }}' }
  - { regexp: '^index_ranges_cleanup_interval ', line: 'index_ranges_cleanup_interval = {{ graylog_arg.index_ranges_cleanup_interval }}' }
  - { regexp: '^output_batch_size ', line: 'output_batch_size = {{ graylog_arg.output_batch_size }}' }
  - { regexp: '^output_flush_interval ', line: 'output_flush_interval = {{ graylog_arg.output_flush_interval }}' }
  - { regexp: '^processbuffer_processors ', line: 'processbuffer_processors = {{ graylog_arg.processbuffer_processors }}' }
  - { regexp: '^outputbuffer_processors ', line: 'outputbuffer_processors = {{ graylog_arg.outputbuffer_processors }}' }
  - { regexp: '^udp_recvbuffer_sizes ', line: 'udp_recvbuffer_sizes = {{ graylog_arg.udp_recvbuffer_sizes }}' }
  - { regexp: '^processor_wait_strategy ', line: 'processor_wait_strategy = {{ graylog_arg.processor_wait_strategy }}' }
  - { regexp: '^ring_size ', line: 'ring_size = {{ graylog_arg.ring_size }}' }
  - { regexp: '^inputbuffer_ring_size ', line: 'inputbuffer_ring_size = {{ graylog_arg.inputbuffer_ring_size }}' }
  - { regexp: '^inputbuffer_processors ', line: 'inputbuffer_processors = {{ graylog_arg.inputbuffer_processors }}' }
  - { regexp: '^inputbuffer_wait_strategy ', line: 'inputbuffer_wait_strategy = {{ graylog_arg.inputbuffer_wait_strategy }}' }
  - { regexp: '^message_journal_enabled ', line: 'message_journal_enabled = {{ graylog_arg.message_journal_enabled | bool | to_json }}' }
  - { regexp: '^message_journal_dir ', line: 'message_journal_dir = {{ graylog_arg.message_journal_dir }}' }
  - { regexp: '^message_journal_max_age ', line: 'message_journal_max_age = {{ graylog_arg.message_journal_max_age }}' }
  - { regexp: '^message_journal_max_size ', line: 'message_journal_max_size = {{ graylog_arg.message_journal_max_size }}' }
  - { regexp: '^message_journal_flush_age ', line: 'message_journal_flush_age = {{ graylog_arg.message_journal_flush_age }}' }
  - { regexp: '^message_journal_flush_interval ', line: 'message_journal_flush_interval = {{ graylog_arg.message_journal_flush_interval }}' }
  - { regexp: '^message_journal_segment_age ', line: 'message_journal_segment_age = {{ graylog_arg.message_journal_segment_age }}' }
  - { regexp: '^message_journal_segment_size ', line: 'message_journal_segment_size = {{ graylog_arg.message_journal_segment_size }}' }
  - { regexp: '^async_eventbus_processors ', line: 'async_eventbus_processors = {{ graylog_arg.async_eventbus_processors }}' }
  - { regexp: '^alert_check_interval ', line: 'alert_check_interval = {{ graylog_arg.alert_check_interval }}' }
  - { regexp: '^mongodb_uri ', line: 'mongodb_uri = {% if graylog_mongodb_user is defined %}mongodb://{{ graylog_mongodb_user }}:{{ graylog_mongodb_pass }}@{{ graylog_mongodb_hosts | list | join(",") }}:{{ graylog_mongodb_port }}/graylog{% else %}mongodb://{{ graylog_mongodb_hosts | list | join(",") }}:{{ graylog_mongodb_port }}/graylog{% endif %}' }
  - { regexp: '^mongodb_max_connections ', line: 'mongodb_max_connections = {{ graylog_arg.mongodb_max_connections }}' }
  - { regexp: '^http_connect_timeout ', line: 'http_connect_timeout = {{ graylog_arg.http_connect_timeout }}' }
  - { regexp: '^http_read_timeout ', line: 'http_read_timeout = {{ graylog_arg.http_read_timeout }}' }
  - { regexp: '^http_write_timeout ', line: 'http_write_timeout = {{ graylog_arg.http_write_timeout }}' }
  - { regexp: '^disable_sigar ', line: 'disable_sigar = {{ graylog_arg.disable_sigar | bool | to_json }}' }
  - { regexp: '^transport_email_enabled ', line: 'transport_email_enabled = {{ graylog_mail_arg.transport_email_enabled | bool | to_json }}' }
  - { regexp: '^transport_email_hostname ', line: 'transport_email_hostname = {{ graylog_mail_arg.transport_email_hostname }}' }
  - { regexp: '^transport_email_port ', line: 'transport_email_port = {{ graylog_mail_arg.transport_email_port }}' }
  - { regexp: '^transport_email_use_auth ', line: 'transport_email_use_auth = {{ graylog_mail_arg.transport_email_use_auth | bool | to_json }}' }
  - { regexp: '^transport_email_use_tls ', line: 'transport_email_use_tls = {{ graylog_mail_arg.transport_email_use_tls | bool | to_json }}' }
  - { regexp: '^transport_email_use_ssl ', line: 'transport_email_use_ssl = {{ graylog_mail_arg.transport_email_use_ssl | bool | to_json }}' }
