galaxy_info:
  author: your name
  description: your description
  company: your company (optional)

  # If the issue tracker for your role is not on github, uncomment the
  # next line and provide a value
  # issue_tracker_url: http://example.com/issue/tracker

  # Some suggested licenses:
  # - BSD (default)
  # - MIT
  # - GPLv2
  # - GPLv3
  # - Apache
  # - CC-BY
  license: license (GPLv2, CC-BY, etc)

  min_ansible_version: 1.2

  # If this a Container Enabled role, provide the minimum Ansible Container version.
  # min_ansible_container_version:

  # Optionally specify the branch Galaxy will use when accessing the GitHub
  # repo for this role. During role install, if no tags are available,
  # Galaxy will use this branch. During import Galaxy will access files on
  # this branch. If Travis integration is configured, only notifications for this
  # branch will be accepted. Otherwise, in all cases, the repo's default branch
  # (usually master) will be used.
  #github_branch:

  #
  # platforms is a list of platforms, and each platform has a name and a list of versions.
  #
  # platforms:
  # - name: Fedora
  #   versions:
  #   - all
  #   - 25
  # - name: SomePlatform
  #   versions:
  #   - all
  #   - 1.0
  #   - 7
  #   - 99.99

  galaxy_tags: []
    # List tags for your role here, one per line. A tag is a keyword that describes
    # and categorizes the role. Users find roles by searching for tags. Be sure to
    # remove the '[]' above, if you add tags to this list.
    #
    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.
    #       Maximum 20 tags per role.

dependencies:
  # List your role dependencies here, one per line. Be sure to remove the '[]' above,
  # if you add dependencies to this list.
  - role: 'ansible-role-linux-elasticsearch'
    vars:
      elastic_auth: '{{ graylog_elastic_auth }}'
      elastic_cluster: '{{ graylog_elastic_cluster }}'
      elastic_pass: '{{ graylog_elastic_pass }}'
      elastic_path: '{{ graylog_elastic_path }}'
      elastic_port_rest: '{{ graylog_elastic_port_rest }}'
      elastic_servers: '{{ graylog_servers }}'
      elastic_version: '{{ graylog_elastic_version }}'
      elastic_heap_size: '{{ graylog_elastic_heap_size }}'
    when: graylog_elastic_dept
  - role: 'ansible-role-linux-mongodb'
    vars:
      mongod_servers: '{{ graylog_servers }}'
      mongod_version: '{{ graylog_mongod_version }}'
      mongod_authorization: '{{ graylog_mongod_auth }}'
      mongod_node_role: '{{ graylog_mongod_node_role }}'
      mongod_path: '{{ graylog_mongod_path }}'
      mongod_port: '{{ graylog_mongod_port }}'
      mongod_replset: "{% if ( graylog_servers|length is not divisibleby 2 ) and ( graylog_servers|length > 2 ) %}{{ graylog_mongod_replset | default('GRAYLOG') }}{% else %}Non-ReplicaSet{% endif %}"
      mongod_sa_pass: '{{ graylog_mongod_sa_pass }}'
      mongod_sa_user: '{{ graylog_mongod_sa_user }}'
      mongod_bu_dbs_arg:
        - user: '{{ graylog_mongod_user }}'
          pass: '{{ graylog_mongod_pass }}'
          dbs: 'graylog'
          role: 'readWrite'
    when: graylog_mongod_dept
  - role: 'ansible-role-linux-nginx'
    vars:
      ngx_version: '{{ graylog_ngx_version }}'
      ngx_port_http: '{{ graylog_ngx_port_http }}'
      ngx_port_https: '{{ graylog_ngx_port_https }}'
      ngx_allow_methods:
        - 'POST'
        - 'PUT'
        - 'GET'
        - 'HEAD'
        - 'DELETE'
      ngx_site:
        - domain: '{{ graylog_ngx_domain }}'
          type: 'proxy'
          location: '/'
          syntax:
            - 'expires off'
            - 'proxy_buffering off'
            - 'proxy_set_header Host $http_host'
            - 'proxy_set_header X-Real-IP $remote_addr'
            - 'proxy_set_header X-Forwarded-Host $host'
            - 'proxy_set_header X-Forwarded-Server $host'
            - 'proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for'
            - 'proxy_set_header X-Graylog-Server-URL https://$server_name/'
          backend_address: '{{ graylog_servers }}'
          backend_port: '{{ graylog_port_arg.api }}'
          sticky: 'ip_hash'
          keepalive: '{{ graylog_arg.http_thread_pool_size }}'
    when: graylog_ngx_dept
    changed_when: false
    failed_when: false
