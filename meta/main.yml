galaxy_info:
  author: your name
  description: your description
  company: your company (optional)

  # If the issue tracker for your role is not on github, uncomment the
  # next line and provide a value
  # issue_tracker_url: http://example.com/issue/tracker

  # Some suggested licenses:
  # - BSD (default)
  # - MIT
  # - GPLv2
  # - GPLv3
  # - Apache
  # - CC-BY
  license: license (GPLv2, CC-BY, etc)

  min_ansible_version: 1.2

  # If this a Container Enabled role, provide the minimum Ansible Container version.
  # min_ansible_container_version:

  # Optionally specify the branch Galaxy will use when accessing the GitHub
  # repo for this role. During role install, if no tags are available,
  # Galaxy will use this branch. During import Galaxy will access files on
  # this branch. If Travis integration is configured, only notifications for this
  # branch will be accepted. Otherwise, in all cases, the repo's default branch
  # (usually master) will be used.
  #github_branch:

  #
  # platforms is a list of platforms, and each platform has a name and a list of versions.
  #
  # platforms:
  # - name: Fedora
  #   versions:
  #   - all
  #   - 25
  # - name: SomePlatform
  #   versions:
  #   - all
  #   - 1.0
  #   - 7
  #   - 99.99

  galaxy_tags: []
    # List tags for your role here, one per line. A tag is a keyword that describes
    # and categorizes the role. Users find roles by searching for tags. Be sure to
    # remove the '[]' above, if you add tags to this list.
    #
    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.
    #       Maximum 20 tags per role.

dependencies:
  # List your role dependencies here, one per line. Be sure to remove the '[]' above,
  # if you add dependencies to this list.
  - role: 'ansible-role-linux-nginx'
    vars:
      ngx_block_common_exploits: true
      ngx_block_agents: true
      ngx_block_file_inject: true
      ngx_block_spam: true
      ngx_block_sql_inject: true
      ngx_compress: true
      ngx_dhparam: true
      ngx_pagespeed: true
      ngx_ssl_protocols: 'modern'
      ngx_version: 'extras'
      ngx_site:
        - domain: '{{ graylog_ngx_domain }}'
          type: 'proxy'
          location: '/'
          syntax:
            - 'expires off'
            - 'proxy_set_header Host $http_host'
            - 'proxy_set_header X-Forwarded-Host $host'
            - 'proxy_set_header X-Forwarded-Server $host'
            - 'proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for'
            - 'proxy_set_header X-Graylog-Server-URL https://$server_name/'
          backend_address: '{{ graylog_servers }}'
          backend_port: '{{ graylog_port_arg.api }}'
          sticky: 'ip_hash'
          keepalive: '{{ graylog_arg.http_thread_pool_size }}'
    when: graylog_ngx_is_used
